windows通过消息的形式向窗口传递用户输入，系统消息和应用程序消息，系统为每个输入事件产生相应的消息
windows将消息发送到一个窗口消息处理函数时传递四个参数： 窗口句柄、消息标识符，两个DWORD值
窗口句柄用来区分哪个窗口接收， 消息标识符用来表示消息的意义。
系统消息： 0x0000 - 0x03FF
用户消息： 0x0400 - 0x7FFF
RegisterWindowMessage()注册消息，返回0xC000 - 0xFFFF
消息派发：   1.将消息放到消息队列（先进先出队列）
            2.不放到消息队列，直接发送到窗口消息处理函数
            
队列消息：   windows可同时显示任意数量的窗口，系统使用消息队列将键盘和鼠标时间正确的派发到正确的窗口。
            windows维护一个系统消息队列，以及分别为每个GUI线程维护一个各自的线程消息队列。
            为了避免非GUI线程创建消息队列的开销，所有线程创建初始化时，均不创建消息队列，当第一次调用GDI函数时，系统才会为线程创建消息队列。非GUI线程没有消息队列。
            鼠标/键盘动作 ->  设备驱动程序  ->  消息  ->  系统消息队列  ->  系统取出并删除一个消息 ->  确定消息的目标窗口   ->  放入窗口的线程消息队列 ->  消息处理函数
            WM_PAINT, WM_TIMER, WM_QUIT，会一直被保存在队列中，只有在队列中没有其他消息时才会被派发到窗口消息处理函数
            多个WM_PAINT会被合并为一个
            填充MSG结构，然后复制到消息队列。包括：窗口句柄、消息标识符、两个消息参数、消息派发时间、鼠标光标位置
            PostMessage()/PostThreadMessage()向自己的消息队列或者是其他线程消息队列发送消息。
            GetMessage()从自己的消息队列中取出并且删除消息。
            PeekMessage()查看但是不删除消息。
            DispatchMessage()指示系统将消息发送到一个窗口消息处理函数。不会传递时间和位置参数，可以通过GetMessageTime/GetMessagePos来获得。
            WaitMessage会使线程交出自己的控制权，当他的消息队列中无消息时，会挂起，直到有消息时才返回。
            SendMessage发送消息到指定的窗口，并等候对方将消息处理，为阻塞函数，获取消息的执行结果后返回。发送非队列消息，发送的消息不经过消息队列。
            PostMessage发送消息到程序的消息队列，不管消息有没有被处理都立即返回，用于消息队列的发送。
            
            


